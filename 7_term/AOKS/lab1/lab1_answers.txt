1. Что такое коммутатор, каково отличие коммутаторов от маршрутизаторов?
Коммутатор - активное сетевое оборудование. Работает на 2 уровне OSI (маршрутизаторы - 3 уровень), в отличие от маршрутизаторов осуществляют передачу принятных пакетов в единственных правильных направлениях (в пределах сегмента) (маршрутизаторы - в соответствии с маршрутной информацией). 

2. Какие возможности имеются во вкладках physical и CLI? Описать 3 любые на выбор, пояснить, как работают.
Physical - добавление модулей, включение/выключение устройства. CLI - писать в консоли (да что угодно описать, хоть просмотр интерфейсов).

3. Особенности коммутатора 2960 ( чё?) )
2 или 4 магистральных порта Gigabit ethernet. Система управления через Bluetooth (при установке соотсветсвующего оборудования в USB порт), POE+ (до 370 Вт), базовые функции 3 уровня - статическая маршрутизация и RIP.

4. Правила именования сетевых интерфейсов на коммутаторах ( чё?) х 2)
Наверное про fe, ge, etc?

5. Режимы работы коммутаторов и команды перехода между режимами
 1 - store&forward - коммутатор получает пакет полностью перед ретрансляцией. анализируется адрес и проверяется checksum. 
     # switching-mode store-forward // <- команда перехода

 2 - cut through - без буферизации. не ожидает получения пакета, анализируется лишь адрес назначения.
     # no switching-mode store-forward // <- команда перехода

 3 - fragment free - промежуточная буферезация. Перед коммутацией коммутатор ожидает получение первых 64 байтов пакета. Таким образом                        обнаруживается, есть ли впакет ошибка. Почти всегда обнаруживается путём передачи именно этих байтов
 
 4 - Hybrid - гибридный, поочерёдное использование вышеперечисленных.

6. Что выводят команды show version и show interfaces?
1 - версия оборудования, 2 - состояния интерфейсов

7. Что такое udp (User Datagram Protocol)? Что такое tcp (Transmission Control Protocol)? Отличия этих протоколов.
4 курс должен знать

8. Какими бывают окна исходя из очереди обработки пакета?
 (?)

9. Что такое пакет? Отобразите структуру пакетам все его поля.
 определённым образом оформленный блок данных. образуется на сетевом уровне OSI. 
 Структура пакета: header (flag, DA, SA, etc), Payload (data), trailer (checksum)

10. На какие две группы делятся поля в пакете, опишите эти группы? ( чё?) х 3)	
 header (flag, DA, SA, etc), Payload (data) (?)

11. Что такое инкапсуляция и декапсуляция?
 Ин - вкладывание пакета вышестоящего уровня в поля данных нижестоящего при продвижении сверху вниз. 
 Де - с точностью наоборот. (развёртывание)

12. Что такое туннелирование?
 Вкладывание пакета одного протокола в пакет другого протокола того же уровня.

13. Что такое фрагментация и дефрагментация?
 Разбиение данных на фрагменты, вместо передачи целиком. Применяется при слишком больших пакетах.
 Де - сборка пакетов.

14. Что такое перемежение?
 Интерливинг - процесс разбиения последовательных битов сообщения так, чтобы биты не передавались друг за другом. Например:
 Изначальное сообщение: 1011|0101|0010|0111 (символом | обозначены блоки сообщения)
 Биты: 			1234|1234|1234|1234
 В процессе интерливинга это как-либо мешается, к примеру (биты из начального сообщения, однако пересталены):
 При интерливинге: 	1000|0101|1011|1101
 Биты:			1111|2222|3333|4444
 После этого сообщение передаётся и происходит обратный интерливинг. Если часть битов потерялась (к примеру, второй блок сообщения), то
 переданный блок выглядит так: 
 После деинтерливинга:	1X11|0X01|0X10|0X11
 При этом некоторые биты были переданы, однако потеряно всего 25%, что для декодера - нормально (может восстановить этот бит, к   примеру по кодировке Хэмминга). 

15. Знать как соотносятся единицы принимаемой информации и уровни модели оси ( чё?) х 4)

16. Что такое бит-стаффинг? Байт-стаффинг?
 Бит-стаффинг решает проблему идентификации начала пакета. Как правило пакет начинается с последовательности 01111110. Встретили такую  
 последовательность в сообщении - пихаем дополнительный 0 или 1, как задано в системе. 
 Байт-стаффинг - при встрече байта начала (7E) вставляем другой (например 7D). Но что делать если встретили 7D в сообщении? После него 
 вставляем ESC-символ (или любой другой). При обратном стаффинге заменяем изменённый 7E на 7D, а если после (или до, в зависимоти от  
 реализации) 7D удаляем ESC-символ.

17. Что такое шестнадцатиричный формат числа, знать все значения и уметь быстро переводить в десятичные числа.