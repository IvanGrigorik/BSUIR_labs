<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//RU">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<META HTTP-EQUIV="Content-Language" CONTENT="ru">

<title>Лекция</title>
<style type="text/css">
 body {font-family: Arial, sans-serif;}
 .c {font-family: "Courier New", Courier, monospace}
</style>

</HEAD><BODY>

<div align="justify">

<p>&nbsp;</p>
<div align="center">
<p><strong>COM-ПОРТЫ ПЕРСОНАЛЬНЫХ КОМПЬЮТЕРОВ</strong></p>
</div>
<p>&nbsp;</p>

<p>История развития последовательного (serial) или, по-другому, коммуникационного (COMmunication) порта неразрывно связана с развитием элементной базы. Применительно к ПК разработчиком как базовой архитектуры так и типовых схем оборудования являлась и до сих пор является компания Intel.</p>

<p>В развитии COM-порта ПК можно выделить следующие основные этапы (следует отметить, что этот процесс сильно коррелирует с развитием COM-портов всех типов компьютерных систем):</p>

<p>1.&nbsp;В свое время (семидесятые годы XX века), в составе периферийной части комплекта микросхем поддержки микропроцессора 8080, компания Intel разработала два контроллера последовательного порта. Один из них, 8250, получил название UART (Universal Asynchronous Receiver/Transmitter) -- универсальный асинхронный приемник-передатчик. Второй, 8251, получил название USART (Universal Synchronous/Asynchronous Receiver/Transmitter) -- универсальный синхронно-асинхронный приемник-передатчик. Эти контроллеры были рассчитаны на подключение по шине X-Bus (шина ввода-вывода, внутрисхемный восьмибитный предшественник системной шины ISA) и поэтому без труда были перенесены в первые ПК на базе процессора 8086 и его модификаций (то есть компьютеры класса IBM PC XT) с тогда наиболее распространенной системной шиной ISA. Совместно с контроллером параллельного порта 8255, микросхема UART либо USART устанавливалась на плату специального адаптера и подключались к материнской плате ПК посредством разъема системной шины. В это же время возникла традиция устанавливать последовательные порты парами (COM1 и COM2).</p>

<p>2.&nbsp;Времена доминирования процессоров 80286 -- Intel486 (то есть компьютеры класса IBM PC AT и IBM PS/2) ознаменованы постепенно набравшими силу интеграционными процессами. На первом этапе происходило распространение и развитие самих контроллеров. В СССР был создан аналог 8251 под названием КР580ВВ51А, который и стал массово применяться в серии ЕС. На Западе же, наоборот, развитие получила микросхема 8250. Апофеозом достаточно быстрого усовершенствования 8250 стали несколько UART, среди которых следует выделить 16550, причем это была разработка уже не Intel, а National Semiconductor. Именно эта микросхема стала де факто стандартной на длительное время (архитектурная совместимость сохраняется вплоть до настоящего времени). 16550 имеет два основных преимущества перед 8250:<br>
-- более высокая пропускная способность последовательного интерфейса (максимальная стандартная пропускная способность увеличена с 9600&nbsp;baud до 115200&nbsp;baud);<br>
-- возможность буферизации (две очереди FIFO по 16 байт -- на стороне передатчика и на стороне приемника).</p>

<p>3.&nbsp;В дальнейшем интеграционные процессы привели к появлению так называемых мультикарт -- подключаемых посредством разъема системной шины (по-прежнему обычно ISA) плат расширения с интегрированными контроллерами: последовательного порта (2x16550), параллельного порта, игрового порта, НГМД и НЖМД. Причем все эти функции сочетались в одной БИС с типичным названием Multi I/O. Основными производителями чипов Multi I/O были компании Winbond, UMC, GoldStar и другие.</p>

<p>4.&nbsp;Для ПК на базе поздних Intel486 уже была характерна интеграция чипа Multi I/O на материнскую плату. Одними из ведущих производителей таковой элементной базы стали компании SiS и OPTi. Компания Intel постепенно отказалась от производства микросхем интегрированной периферии и сосредоточилась на разработке наборов микросхем («чипсетах») системной логики (последней БИС Multi I/O, которая была выпущена самой компанией Intel, стала 82091).</p>

<p>5.&nbsp;Во времена процессоров Pentium сформировалась действительная до сих пор базовая крупноблочная структура материнской платы ПК, состоящая из четырех основных БИС.</p>

<div align="center">
<img src="lk02.01.bmp">
<br>
Рисунок -- Базовая структура современного ПК
</div>

<p>Контроллеры последовательного порта (по той же схеме 2x16550) в составе интегрированной периферии были перенесены и в эту структуру. Однако, в связи с некоторой заменой функционала интегрированной периферии (например, удаление контроллера НЖМД и добавление контроллера клавиатуры), вместо названия Multi I/O стало больше использоваться название Super I/O. С этого момента реализации последовательных портов не претерпели никаких изменений. Основными производителями чипов Super I/O являются компании Winbond, ITE и SMSC. После перехода от мостовой (bridges) организации ПК к хабовой (hubs) в рамках данной структуры (начиная с восьмисотой серии чипсетов Intel в эпоху Pentium III) для внутрисхемного подключения Super I/O вместо шины X-Bus стала использоваться шина LPC (Low Pin Count) -- специализированная разновидность шины PCI с небольшим числом разрядов.</p>

<div align="center">
<img src="lk02.02.bmp">
<br>
Рисунок -- Структурная схема Super I/O на примере ITE IT8712F [ITE datasheet]
</div>

<p>6.&nbsp;В настоящее время (приблизительно с 2005 года) традиционный последовательный интерфейс ПК считают устаревшим (legacy), часто исключают из состава интегрированной периферии -- на материнских платах можно увидеть все реже. Однако возобновлено производство мультикарт -- новые версии представляют собой платы расширения с интерфейсом PCI.</p>

<p>Сейчас в качестве основного последовательного интерфейса ПК рассматривают шину USB (Universal Serial Bus), впервые введенную в состав ПК еще в эпоху процессоров Pentium.</p>

<p>Сам факт передачи информации подразумевает наличие передатчика, приемника и канала, по которому они связаны. Как и следует из названия, UART 16550 сочетает в себе функции как приемника, так и передатчика. Предоставлена возможность подключения к двунаправленному физическому каналу связи (или, по-другому, линии) в соответствии со стандартом RS-232. На аппаратном уровне приемник и передатчик работают параллельно, то есть по отдельным физическим цепям полностью независимо друг от друга.</p>

<div align="center">
<img src="lk02.03.bmp">
<br>
Рисунок -- Структурная схема UART 16550 [National Semiconductor datasheet]
</div>

<p>Интерфейс RS-232 (традиционное название, последнюю редакцию 1997 года правильно называть TIA-232-F, существуют и другие названия) предназначен для подключения АПД (например, модема) к ООД (например, UART).</p>

<p>Для физического подключения по стандарту RS-232 используют девятиконтактные разъемы D Subminiature (D-sub) DE-9. В старых ПК класса IBM PC использовали и аналогичные двадцатипятиконтактные разъемы DB-25. Принято, что штырьевую часть разъема устанавливают со стороны ООД, а гнездовую часть -- со стороны АПД.</p>

<p>Логотип последовательного порта: «<span class="c">|O|O|</span>». Согласно PC System Design Guide, с 1999 года разъемы последовательных портов окрашивают в бирюзовый цвет.</p>

<p>Традиционное назначение цифровых цепей RS-232:<br>
--&nbsp;SOUT (Serial Output) -- выход передатчика;<br>
--&nbsp;SIN (Serial Input) -- вход приемника;<br>
--&nbsp;RTS (Request to Send) -- сигнал-запрос от UART к модему о передаче байта;<br>
--&nbsp;CTS (Clear to Send) -- сигнал-подтверждение от модема к UART о готовности принять байт для передачи;<br>
--&nbsp;DSR (Data Set Ready) -- сигнал от модема к UART о готовности к взаимодействию;<br>
--&nbsp;DTR (Data Terminal Ready) -- сигнал от UART к модему о готовности к взаимодействию;<br>
--&nbsp;DCD (Data Carrier Detect) -- сигнал от модема к UART об обнаружении данных;<br>
--&nbsp;RI (Ring Indicator) -- сигнал от модема к UART об обнаружении входящего телефонного звонка.</p>

<p>Служебные цепи RS-232 позволяют организовать контроль информационного потока (flow control). Например, это позволяет избегать переполнения приемника, приостанавливая «быстрый» передатчик. Следует отметить, что практически все служебные цепи напрямую связаны с соответствующими регистрами управления и состояния UART 16550, то есть «открыты» для программирования. Следовательно, алгоритмы контроля реализуют программно и закладывают, например, в драйверы операционных систем. Контроль может быть как полуаппаратным (с задействованием сигналов RS-232), так и сугубо программным.</p>

<p>Очевидно, что традиционное использование пары RTS/CTS позволяет контролировать передачу только в одном направлении -- от UART к модему. Для контроля передачи в обратном направлении использовалась пара DSR/DTR.</p>

<p>В большинстве современных реализаций контроль по прежнему предполагает наличие обратной связи, но осуществляется только приемником. Два основных метода:<br>
1.&nbsp;RTS/CTS -- полуаппаратный.<br>
2.&nbsp;XON/XOFF -- программный.</p>

<p>UART контролирует передачу данных «к себе» управляя активностью цепи RTS, модем -- CTS. Значительно реже применяют метод DTR/DSR -- полностью аналогичен методу RTS/CTS, но значения сигналов сохраняются на протяжении всего информационного обмена, а не каждой посылки. При полностью программном контроле, приемник передает в обратном направлении специальный байт XON (стандартное значение 11h) для инициирования передачи и специальный байт XOFF (стандартное значение 13h) для остановки передачи.</p>

<p>В стандартной ситуации, ООД взаимодействуют между собой посредством АПД, причем с помощью так называемых «рукопожатий» (handshaking) с АПД. При этом подключение АПД к ООД осуществляют посредством <em>«прямого» кабеля</em> (straight-through cable). Для подключения двух ООД друг к другу непосредственно необходим один из вариантов <em>нуль-модемного</em> (null-modem, поскольку предполагают отсутствие модема) <em>кросс-кабеля</em> (crossover cable, поскольку цепи SIN и SOUT скрещивают).</p>

<div align="center">
<img src="lk02.04.bmp">
<br>
Рисунок -- Варианты кабелей RS-232
</div>

<p>Для изготовления кросс-кабеля нужны минимум три провода. Иногда программное обеспечение рассчитано только на использование модемов. В подобных ситуациях, для непосредственного подключения двух ООД необходимо «закоротить» соответствующие пары сигналов Часто в литературе приводят еще одну схему нуль-модемного кабеля, в соответствии с которой роль модема играет ООД-абонент.</p>

<p>Скрещивание, как таковое, обусловлено необходимостью правильного согласования электрических цепей. При этом нужно иметь в виду, что в информационных системах принято все «мерить» относительно человека, в том числе и ввод-вывод. Таким образом, в ПК направление определяется «с точки зрения» центрального процессора, а в данном случае -- «с точки зрения» ООД.</p>

<div align="center">
<img src="lk02.05.bmp">
<br>
Рисунок -- Электрическая цепь со сторон ООД иАПД
</div>

<p>Как известно, без синхронизации в том либо ином виде передать ничего не возможно. Передатчик и приемник, по крайней мере, должны «встретиться во времени». Поскольку передатчик и приемник не имеют общего источника времени, в линию вводятся специальные синхросигналы. С точки зрения синхронизации, применительно к последовательным каналам связи выделяют два режима обмена:<br>
1.&nbsp;<em>Асинхронный</em> (asynchronous) -- синхронизируется посылка каждого информационного байта.<br>
2.&nbsp;<em>Синхронный</em> (synchronous) -- синхронизируется весь информационный обмен.</p>

<div align="center">
<img src="lk02.06.bmp">
<br>
Рисунок -- Формат посылки в асинхронном режиме
</div>

<p>Атомарной, то есть минимальной неделимой единицей, с которой работает как UART, так и USART, является байт, причем один байт не обязательно равен восьми битам и может содержать от 5 до 8 битов. По умолчанию линия находится в состоянии логической единицы. При наличии байта для передачи передатчик переводит линию в состояние логического нуля, то есть передает старт-бит, что говорит приемнику о том, что на следующем такте нужно «ловить» первый информационный бит. Стоп-бит необходим для того, чтобы после передачи информационной последовательности гарантированно вернуть линию в исходное, то есть единичное состояние. Старт-бит всегда один, а стоп-битов может быть один, полтора либо два. Для проверки целостности информационной части, если эта проверка включена, за информационной частью вставляется бит паритета. При этом действует правило дополнения. Например, если включена проверка единиц на четность (even), то бит паритета формируется таким образом, чтобы общее число единиц (в информационной части плюс бит паритета) было четным. Либо, если включена проверка нулей на нечетность (odd), то общее количество нулей должно быть нечетным. Ошибки отслеживаются приемником.</p>

<div align="center">
<img src="lk02.07.bmp">
<br>
Рисунок -- Формат посылки в синхронном режиме
</div>

<p>При «простое» передатчик «заполняет» линию специальными байтами синхронизации, тем самым настраивая приемник. Все поступающие байты передаются без «обрамления». Как и в асинхронном режиме, ошибки отслеживаются приемником. При обнаружении ошибок, а при длительной непрерывной передаче из-за накапливающихся фазовых сдвигов они неизбежно возникают, приемник должен каким-либо дополнительным способом (так как текущую цепь задействовать невозможно) приостановить передатчик, чтобы тот вновь «заполнил» линию байтами синхронизации.</p>

<p>По своей сути, передатчик и приемник COM-порта представляют собой сдвиговые регистры. Данные, предварительно записанные в регистр передатчика параллельно, затем последовательно сдвигаются в линию под воздействием тактовых импульсов. В процессе работы UART 16550 тактирование сдвиговых регистров осуществляется непрерывно. Следовательно, данные начинают поступать в линию сразу после их записи в регистр передатчика. Заполнение регистра приемника так же происходит «автоматически». Если передаваемые байты записываются слишком быстро, то возникает переполнение очереди FIFO передатчика. Если принимаемые байты считываются слишком медленно, то после переполнение очереди FIFO приемника происходит их потеря.</p>

<p>Тактирование сдвиговых регистров UART 16550 осуществляется с помощью встроенного программируемого бод-генератора (baud generator) (тактирование некоторых первых реализаций UART осуществлялось таймером). Бод-генератор представляет собой программируемый делитель частоты. Выходная частота бод-генератора Fout определяется по формуле:</p>

<p><em>F</em><sub><em>out</em></sub> = <em>F</em><sub><em>in</em></sub> / (16 <em>DL</em>) ,</p>

<p>где <em>F</em><sub><em>in</em></sub> -- входная частота, <em>DL</em> -- шестнадцатибитная константа, старшая и младшая части которой хранятся в двух регистрах UART (DLL и DLM).</p>

<p>На вход бод-генератора поступает меандр, получаемый от внешнего кварцевого резонатора, который тактирует и сам автомат UART. Частота тактирования автомата UART по крайней мере в 16 раз больше <em>F</em><sub><em>out</em></sub>. Следует учитывать, что, для того чтобы правильно рассчитать <em>DL</em>, необходимо точно знать <em>F</em><sub><em>in</em></sub>. Вполне естественно, что на разных материнских платах используют разные микросхемы и разные кварцевые резонаторы. Применительно к современным Super I/O, эта частота может достигать 48&nbsp;MHz, то есть совпадать с частотой синхронизации Super I/O. Но, за счет еще одного деления частоты (при загрузке ПК BIOS конфигурирует UART инициализируя соответствующие регистры конфигурационного пространства Super I/O), как правило, <em>F</em><sub><em>in</em></sub> приводится к классическому значению 1,843&nbsp;MHz. При этом, если <em>DL</em>&nbsp;=&nbsp;1 (нулевое значение <em>DL</em> использовать крайне не рекомендуется), то <em>F</em><sub><em>out</em></sub> = 115200&nbsp;Hz.</p>

<p>Пропускную способность последовательных каналов связи принято оценивать в бодах. Один бод (baud) равен одному сигналу в секунду. В случае с UART 16550 производительность, измеренная в бодах, совпадает с производительностью, измеренной в битах в секунду (bit/s равно bps).

<p>UART 16550, как и вся БИС Super I/O, как и любая БИС на материнской плате, является низковольтной. Но в интерфейсе RS-232 значения логических уровней совершенно другие, значительно более «разнесенные», что позволяет передавать данные на расстояние до нескольких десятков метров. Для получения необходимых значений используют специализированные преобразователи уровней 75232 (аналоги: 75185, 6571 и другие).</p>

<p>Преобразователь уровней 75232 фактически играет роль трансивера (transceiver, transmitter плюс receiver), сочетая функции приемника и передатчика в интерфейсе с определенной физической средой, которой в данном случае является RS-232.</p>

<div align="center">
<img src="lk02.08.bmp">
<br>
Рисунок -- Подключение трансивера RS-232
</div>

<p>В больших ЭВМ производства второй половины прошлого века для подключения терминалов применялись другие трансиверы -- трансиверы токовой петли (current loop), которые не «разносят» уровни напряжений, а моделируют токовые посылки, что позволяет увеличить расстояние передачи. Возможность использования токовой петли в ПК была отвергнута изначально.</p>

<p>Как и любое устройство ввода-вывода, UART 16550 содержит регистры управления, регистры состояния, плюс информационные регистры. В стандартной архитектуре ПК для СOM1 и COM2 зарезервированы следующие диапазоны программных портов в адресном пространстве ввода-вывода процессора: 3F8h -- 3FFh и 2F8h -- 2FFh соответственно (но возможности Super I/O позволяют сконфигурировать UART 16550 нестандартно).</p>

<p>Регистры UART 16550 отображаются в соответствующий диапазон следующим образом.</p>

<div align="center">
<img src="lk02.09.bmp">
<br>
Рисунок -- Регистры UART 16550 [Intel datasheet]
</div>

<p>(Регистры данных, как и цепи для передачи и приема данных, в разных документах называют по-разному.)</p>

<p>Отображение частично зависит от значения Divisor Latch Access Bit (DLAB) -- самого старшего (седьмого) бита регистра LCR.</p>

<p>Прикладная программа должна в первую очередь корректно инициализировать соответствующие регистры UART. При этом предоставлена возможность работы по прерываниям. Стандартными аппаратными прерываниями COM1 и COM2 являются IRQ4 и IRQ3 соответственно (так же можно изменить).</p>

<p>Назначение регистров:<br>
1.&nbsp;THR (Transmit Holding Register) -- регистр данных передатчика (точнее буферный регистр сдвигового регистра передатчика).<br>
2.&nbsp;RBR (Receiver Buffer Register) -- регистр данных приемника (точнее буферный регистр сдвигового регистра приемника).<br>
3.&nbsp;DLL (Divisor Latch Least significant byte) -- младшая часть константы деления бод-генератора.<br>
4.&nbsp;DLM (Divisor Latch Most significant byte) -- старшая часть константы деления бод-генератора.<br>
5.&nbsp;IER (Interrupt Enable Register) -- регистр разрешения прерываний.</p>

<div align="center">
<img src="lk02.10.bmp">
<br>
Рисунок -- IER
</div>

<p>6.&nbsp;IIR (Interrupt Identification Register) -- регистр идентификации прерываний.</p>

<div align="center">
<img src="lk02.11.bmp">
<br>
Рисунок -- IIR
</div>

<p>Таблица -- Прерывания UART 16550
<table border="1" cellspacing="1" cellpadding="1">
<tr><td align="center">Бит 3 IIR</td><td align="center">Бит 2 IIR</td><td align="center">Бит 1 IIR</td><td align="center">Бит 0 IIR</td><td align="center">Приоритет прерывания</td><td align="center">Тип прерывания</td><td align="center">Причины прерывания</td><td align="center">Условие сброса прерывания</td></tr>
<tr><td align="center">0</td><td align="center">0</td><td align="center">0</td><td align="center">1</td><td align="justify">Нет</td><td align="justify">Нет</td><td align="justify">Нет</td><td align="justify">Нет</td></tr>
<tr><td align="center">0</td><td align="center">1</td><td align="center">1</td><td align="center">0</td><td align="justify">Первый<br>(наивысший)</td><td align="justify">Статус линии изменился</td><td align="justify">Переполнение, ошибка паритета, ошибка в формате посылки</td><td align="justify">Чтение LSR</td></tr>
<tr><td align="center">0</td><td align="center">1</td><td align="center">0</td><td align="center">0</td><td align="justify">Второй</td><td align="justify">Приемник заполнен</td><td align="justify">Данные успешно приняты</td><td align="justify">Чтение RBR</td></tr>
<tr><td align="center">1</td><td align="center">1</td><td align="center">0</td><td align="center">0</td><td align="justify">Второй</td><td align="justify">Тайм-аут</td><td align="justify">Не было чтения и записи в очередь FIFO приемника в течение времени, соответствующего приему четырех байтов, и в очереди находится по крайней мере один байт</td><td align="justify">Чтение RBR</td></tr>
<tr><td align="center">0</td><td align="center">0</td><td align="center">1</td><td align="center">0</td><td align="justify">Третий</td><td align="justify">Передатчик пуст</td><td align="justify">Данные успешно переданы</td><td align="justify">Чтение IIR или запись в THR</td></tr>
<tr><td align="center">0</td><td align="center">0</td><td align="center">0</td><td align="center">0</td><td align="justify">Четвертый</td><td align="justify">Статус модема изменился</td><td align="justify">CTS, DSR, RI, DCD</td><td align="justify">Чтение MSR</td></tr>
</table>
</p>

<p>7.&nbsp;FCR (FIFO Control Register) -- регистр управления очередями FIFO передатчика и приемника.</p>

<div align="center">
<img src="lk02.12.bmp">
<br>
Рисунок -- FCR
</div>

<p>8.&nbsp;LCR (Line Control Register) -- регистр управления линией.</p>

<div align="center">
<img src="lk02.13.bmp">
<br>
Рисунок -- LCR
</div>

<p>Включение «залипания» бита паритета (sticky parity) приводит к передаче соответствующего константного значения. Включение паузы приводит к приостановке передатчика. При этом передатчик удерживает линию в состоянии логического нуля длительное время, что автоматически переводит в режим паузы и приемник (без уведомления об ошибках).</p>

<p>9.&nbsp;MCR (Modem Control Register) -- регистр управления модемом.</p>

<div align="center">
<img src="lk02.14.bmp">
<br>
Рисунок -- MCR
</div>

<p>Включение loopback-режима приводит к «закорачиванию» выхода передатчика и входа приемника, что может применяться с целью тестирования UART.</p>

<p>10.&nbsp;LSR (Line Status Register) -- регистр состояния линии.</p>

<div align="center">
<img src="lk02.15.bmp">
<br>
Рисунок -- LSR
</div>

<p>После считывания очередных данных из приемника нулевой бит LSR обнуляется. После записи очередных данных в передатчик обнуляются пятый и шестой биты LSR. Остальные биты обнуляются после чтения LSR.</p>

<p>11.&nbsp;MSR (Modem Status Register) -- регистр состояния модема.</p>

<div align="center">
<img src="lk02.16.bmp">
<br>
Рисунок -- MSR
</div>

<p>12.&nbsp;SCR (Scratch Pad Register) -- дополнительный регистр для вре'менного хранения данных, не связанный с функционированием UART.</p>

<p>С точки зрения топологии, интерфейс RS-232 обладает одним существенным ограничением, которое закономерно вытекает из его природы. Он изначально задумывался как интерфейс между разноранговыми устройствами, то есть, по сути дела, как интерфейс для подключения периферийных устройств к компьютеру. Более двух устройств с помощью RS-232 объединить невозможно.</p>

<p>В результате, закономерным продолжением стандарта RS-232 стали два стандарта: RS-422 (EIA-422-B) и RS-485 (EIA-485). При этом RS-422 можно рассматривать как промежуточный на пути к RS-485 стандарт. Сравнение основных характеристик упомянутых стандартов приведено в таблице.</p>

<p>Таблица -- Основные сравнительные характеристики RS-232, RS-422 и RS-485
<table border="1" cellspacing="1" cellpadding="1">
<tr><td align="center">Характеристика</td><td align="center">RS-232</td><td align="center">RS-422</td><td align="center">RS-485</td></tr>
<tr><td align="justify">Способ передачи сигнала</td><td align="justify">Изменение потенциала относительно земли</td><td align="justify">Дифференциальная пара</td><td align="justify">Дифференциальная пара</td></tr>
<tr><td align="justify">Направление передачи</td><td align="justify">Одностороннее,<br>двустороннее</td><td align="justify">Одностороннее,<br>двустороннее</td><td align="justify">Одностороннее,<br>двустороннее</td></tr>
<tr><td align="justify">Максимальное количество передатчиков</td><td align="justify">1</td><td align="justify">1</td><td align="justify">32</td></tr>
<tr><td align="justify">Максимальное количество приемников</td><td align="justify">1</td><td align="justify">10</td><td align="justify">32</td></tr>
<tr><td align="justify">Ориентировочная максимальная пропускная способность</td><td align="justify">1&nbsp;Mbit/s</td><td align="justify">10&nbsp;Mbit/s</td><td align="justify">10&nbsp;Mbit/s</td></tr>
<tr><td align="justify">Ориентировочное максимальное расстояние</td><td align="justify">15&nbsp;m</td><td align="justify">1200&nbsp;m</td><td align="justify">1200&nbsp;m</td></tr>
</table>
</p>

<p>Для передачи данных посредством интерфейса RS-485 требуются специальные трансиверы с гальванической развязкой, позволяющие реализовать дифференциальный способ передачи сигнала. Гальваническая развязка может быть либо трансформаторной, либо оптронной. О СрПД в стандарте не сказано, но, как правило, используют витую пару (twisted pair) и разъемы типа RJ.</p>

</div>

</BODY>
</HTML>
