<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//RU">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<META HTTP-EQUIV="Content-Language" CONTENT="ru">

<title>Лекция</title>
<style type="text/css">
 body {font-family: Arial, sans-serif;}
 .c {font-family: "Courier New", Courier, monospace}
</style>

</HEAD><BODY>

<div align="justify">

<p>&nbsp;</p>
<div align="center">
<p><strong>АДРЕСАЦИЯ В КОМПЬЮТЕРНЫХ СЕТЯХ</strong></p>
</div>
<p>&nbsp;</p>

<p>Для того, чтобы станции-абоненты могли организовать взаимодействие, им необходимо некоторым образом выделять друг друга среди других станций. С целью идентификации станций им присваивают некоторые адреса. Таким образом, возникает <em>адресация</em> (addressing) в СПД.</p>

<p>Как было сказано ранее, в форматах большинства пакетов присутствуют два адреса:<br>
1.&nbsp;Адрес назначения (destination address).<br>
2.&nbsp;Адрес источника (source address).</p>

<p>В процессе пересылки пакета между абонентами адресация играет ключевое значение. Производительность СПД напрямую зависит от расположения адресов в пакете. Поэтому адреса «выносят» в самое начало пакета. Более того, поскольку с точки зрения доставки пакета адрес назначения является более важным (в СПД анализируется именно этот адрес), он как правило располагается раньше.</p>

<p>Многие топологии предполагают возможность приема переданного одной из станций пакета всеми остальными станциями в пределах сегмента -- вне зависимости от того, какой из станций пакет был предназначен. Следует различать действия «принят станцией», «проанализирован станцией» и «обработан станцией». Факт приема станцией пакета подразумевает, что пакет будет проанализирован, но не подразумевает «полноценную» обработку. Именно сравнение считанного из принятого пакета адреса назначения со своим адресом, позволяет станции распознать пакет как «свой».</p>

<p>Считанный из пакета адрес источника позволяет станции (при необходимости) определить абонента, создавшего пакет.</p>

<p>Следует учитывать, что важное влияние на адресацию оказывает инкапсуляция. Адресация всегда «привязана» к некоторому протоколу, а протокол, в свою очередь, «привязан» к уровню модели OSI. Поэтому закономерно, что на каждом из уровней присутствует своя независимая система адресации.</p>

<p>Пакет, воспринятый как «свой» на одном из уровней, после его передачи на более высокий уровень, там вполне может быть «отвергнут». Кроме того, «окончательная» обработка не всегда происходит на прикладном уровне (классический пример: ретрансляция пакета между сегментами при маршрутизации).</p>

<p>В каждом пакете должны присутствовать по крайней мере адреса канального уровня. В большинстве же практических реализаций семейств протоколов, кроме адресации на канальном уровне, предусмотрена адресация на сетевом (в связке с транспортным) и прикладном уровнях.</p>

Допустимость повторения адресов на одном уровне вытекает из цели разработки определенного протокола.</p>

<p>Адреса канального уровня «зашиваются» в сетевое оборудование при его производстве и поэтому повторяться не должны. Они не предполагают возможность пользовательского вмешательства и их считают абсолютно уникальными. Часто (в том числе Cisco) такую адресацию называют <em>физической</em> (physical).</p>

<p>Адреса сетевого и прикладного уровней назначают пользователи. Часто (в том числе Cisco) такую адресацию называют <em>логической</em> (logical).</p>

<p>В нормальной ситуации, по крайней мере в течение сеанса взаимодействия, адреса разных уровней одной станции должны соответствовать друг другу. Поэтому возникает необходимость в служебных протоколах, отыскивающих эти соответствия.</p>

<p>Кроме всего прочего, даже на одном уровне модели OSI адресация может быть <em>иерархической</em> (hierarchical), то есть предполагать определенную структуризацию соответствующего адресного пространства.</p>

<p>Иерархичность выражается в количественном и качественном разделении адресов на типы.</p>

<p>Одним из примеров может служить связка адреса сетевого уровня с адресом транспортного уровня.</p>

<p>В рамках функционирования сетевой ОС можно выделить следующие объекты:<br>
1.&nbsp;<em>Сетевой процесс</em> (network process) -- представляет собой пару: процессор и выполняющаяся на нем сетевая (то есть использующая сетевые ресурсы) программа; причем, если меняется хотя бы один из этих компонентов, то получается новый процесс.<br>
2.&nbsp;<em>Сетевой ресурс</em> (network resource) -- это любой компонент вычислительной системы, который может быть предоставлен в пользование сетевому процессу на определенное время.</p>

<p>Для того, чтобы взаимодействующие сетевые процессы могли найти друг друга, во всех реальных системах используется три уровня адресации:<br>
1.&nbsp;Необходимо адресовать подсеть -- используется <em>адрес подсети</em> (subnet address).<br>
2.&nbsp;Необходимо адресовать станцию в подсети -- используется <em>адрес станции</em> (node address).<br>
3.&nbsp;Необходимо адресовать процесс в станции -- используется так называемый <em>адрес программного порта</em> (software port).</p>

<p>Под адрес порта, как правило, отведено два байта. При назначении программных портов учитываются диапазоны, к которым они относятся.</p>

<p>Таблица -- Диапазоны программных портов применительно к семейству TCP/IP
<table border="1" cellspacing="1" cellpadding="1">
<tr><td align="center">Port Number Range</td><td align="center">Port Group</td><tr>
<tr><td align="center">0 -- 1023</td><td align="justify">Well Known</td><tr>
<tr><td align="center">1024 -- 49151<td align="justify">Registered</td><tr>
<tr><td align="center">49152 -- 65535<td align="justify">Private and Dynamic</td><tr>
</table>
</p>

<p>Так называемые хорошо известные порты предназначены для адресации основных сервисов в Internet. Порты для дополнительных публичных сервисов нужно регистрировать. Порты для приватных (и редких) сервисов регистрировать не нужно. Динамические порты предназначены для использования на стороне клиентов.</p>

<p>Специально для компьютерных сетей были разработаны четыре основных способа адресации, которые заключаются в применении адресов четырех базовых типов:<br>
1.&nbsp;<em>Юникаст</em> (unicast) -- пакет с таковым адресом назначения должен быть обработан одной соответствующей станцией.<br>
2.&nbsp;<em>Бродкаст</em> или, по-другому, <em>широковещательных</em> (brodcast) -- пакет с таковым адресом назначения должен быть обработан всеми станциями.<br>
3.&nbsp;<em>Мультикаст</em> (multicast) -- пакет с таковым адресом назначения должен быть обработан несколькими станциями из множества.<br>
4.&nbsp;<em>Эникаст</em> (anycast) -- пакет с таковым адресом назначения должен быть обработан одной станцией из множества.</p>

<p>По сути, мультикаст- и эникаст-адреса являются <em>групповыми идентификаторами</em> (Group IDs).</p>

<p>Специфика тех или иных типов накладывает ограничения на возможность использования адресов. Бродкаст-, мультикаст- и эникаст-адреса не могут быть адресами источников, так как отдельно взятый пакет может сгенерировать только одна станция.</p>

<p>Особую проблему представляет собой межсегментная ретрансляция группового трафика (актуально для прикладного мультикаст-трафика). Проблема решается с помощью дополнительных служебных протоколов.</p>

<p>Наиболее сложной формой адресации является эникаст-адресация. Очевидно, что каждый раз при приеме эникаст-пакета должен осуществляться выбор на основе какого-либо критерия. При этом адресуемые станции должны осуществлять выбор в пределах группы сами. Отправившая пакет станция не может принимать участие в алгоритме выбора, она уже сделала свой «выбор» записав в пакет в качестве адреса назначения эникаст-адрес. Выбор должен быть сделан заблаговременно, чтобы принимающая станция была готова к поступлению в группу пакета. Примером критерия выбора может служить время задержки. Выбор может осуществляться однократно либо периодически.</p>

<p>Почти все широко применяемые в настоящее время технологии ЛКС (например, Ethernet) разработаны IEEE, поэтому производители соответствующего сетевого оборудования соблюдают правила, сформулированные в стандартах этой организации.</p>

<p>Уникальность MAC-адресов контролирует IEEE RA (IEEE Registration Authority).</p>

<p>В стандартах IEEE определены три базовых формата MAC-адресов: MAC-48, EUI-48 и EUI-64, где EUI (Extended Unique Identifier) -- расширенный уникальный идентификатор. MAC-48 можно считать синонимом EUI-48, хотя изначально это было более общее понятие.</p>

<div align="center">
<img src="lk08.01.bmp">
<br>
Рисунок -- Формат EUI-48
</div>

<p>Поля:<br>
1.&nbsp;OUI (Organizationally Unique Identifier) -- уникальный идентификатор организации.<br>
2.&nbsp;U/L (Universal/Local) -- признак универсальности-локальности адреса.<br>
3.&nbsp;I/G (Individual/Group) -- признак индивидуального-группового адреса.<br>
4.&nbsp;Extension Identifier -- идентификатор-наполнитель.</p>

<p>OUIs выдают централизовано, уникальность оставшейся части должны обеспечивать сами организации (любым способом по своему усмотрению).</p>

<p>Время валидности адресов (время, которое нужно выдержать перед повторным присвоением того же адреса другому устройству) определено как 100 лет.</p>

<p>Иногда, при администрировании, возникает необходимость подменить адрес, «зашитый» в оборудование, на некий другой. Этот новый адрес называют <em>локальным административным адресом</em> (locally administered address). Его признаком является единичное значение бита U/L. Согласовывать значение остальных битов не требуется, но в пределах сегмента адрес не должен повторяться.</p>

<p>Граница между OUI и Extension Identifier может проходить не только посредине адреса. В общем случае предусмотрены три варианта разрядности поля OUI:<br>
1.&nbsp;MA-L (MAC Address -- Large) -- 24 бита (данную схему использовали до 1 января 2014 г.)<br>
2.&nbsp;MA-M (MAC Address -- Medium) -- 28 битов (схема доступна после 1 января 2014 г.)<br>
3.&nbsp;MA-S (MAC Address -- Small) -- 36 битов (схема доступна после 1 января 2014 г.)</p>

<p>Иногда поле OUI рассматривают как CID (Company ID), что, по большому счету, то же самое -- зависит от комбинации значений битов U/L и I/G (рассматривают уже как биты X и M соответственно).</p>

<p>При так называемом каноническом представлении (canonical representation) MAC-адрес сдвигается в канал начиная со старших разрядов (на рисунке слева).</p>

<p>По правилам IEEE MAC-адреса записывают в следующей нотации:</p>

<p>XX-XX-XX-XX-XX-XX</p>

<p>Где X -- шестнадцатеричная цифра (верхний регистр). Но очень часто используют альтернативные нотации. Примеры:</p>

<p><span class="c">00-16-41-57-7D-48</span> -- IEEE<br>
<span class="c">00-16-41-57-7d-48</span><br>
<span class="c">00:16:41:57:7D:48</span><br>
<span class="c">00:16:41:57:7d:48</span><br>
<span class="c">0016.4157.7d48</span> -- Cisco</p>

<p>Все юникаст-MAC-адреса должны иметь нулевое значение бита I/G.</p>

<p>Групповые MAC-адреса формируются по особым правилам, которые будут рассмотрены позже.</p>

<p>В качестве бродкаст-MAC-адреса принято использовать значение <span class="c">FF-FF-FF-FF-FF-FF</span>.</p>

<p>Следует отметить, что EUI-64 может использоваться не только для адресации, а и для просто идентификации устройств.</p>

<p>Примеры технологий с применением EUI-48: Ethernet, Wi-Fi, Token Ring.</p>

<p>Примеры технологий с применением EUI-64: IPv6, FireWire.</p>

<p>В семействе TCP/IP за адресацию на сетевом уровне отвечает протокол IP.</p>

<p>Заголовок протокола IPv4 (версии 4) (RFC&nbsp;791) имеет фиксированную структуру.</p>

<div align="center">
<img src="lk08.02.bmp">
<br>
Рисунок -- Формат заголовка IPv4
</div>

<p>Поля:<br>
1.&nbsp;Version -- версия (значение равно 4).<br>
2.&nbsp;IHL (Internet Header Length) -- длина заголовка (в 32-ухбитных словах, минимальное значение равно 5).<br>
3.&nbsp;Type of Service -- тип сервиса (связано с QoS).<br>
4.&nbsp;Total Length -- общая длина данных (в байтах, не может превышать 65535 байтов).<br>
5.&nbsp;Flags -- флаги.<br>
6.&nbsp;Fragment Offset -- смещение текущего фрагмента (в 64-ехбитных словах, смещение первого фрагмента равно нулю).<br>
7.&nbsp;Time to Live -- «время жизни» (при каждой ретрансляции уменьшается, когда становится равным нулю пакет уничтожается).<br>
8.&nbsp;Protocol -- протокол (инкапсулируемый в поле данных).<br>
9.&nbsp;Header Checksum -- контрольная сумма заголовка.<br>
10.&nbsp;Source Address -- адрес источника.<br>
11.&nbsp;Destination Address -- адрес назначения.<br>
12.&nbsp;Options -- опции (например, связанные с безопасностью, размер вариативен).</p>

<div align="center">
<img src="lk08.03.bmp">
<br>
Рисунок -- Поле Flags
</div>

<p>Флаги:<br>
1.&nbsp;DF (Don’t Fragment): 0 -- пакет фрагментирован, 1 -- пакет нефрагментирован.<br>
2.&nbsp;MF (More Fragments): 0 -- текущий фрагмент является последним, 1 -- текущий фрагмент не является последним.</p>

<p>Заголовок протокола IPv6 (RFC&nbsp;8200) имеет «гибкую» структуру. Заголовки «каскадируются» -- сколько заголовков нужно, столько и вставляется.</p>

<div align="center">
<img src="lk08.04.bmp">
<br>
Рисунок -- Формат заголовка IPv6
</div>

<p>Новые поля:<br>
1.&nbsp;Traffic Class -- класс трафика (связано с QoS).<br>
2.&nbsp;Flow Label -- метка потока (связано с QoS).<br>
3.&nbsp;Payload Length -- длина полезной нагрузки (в байтах, аналог поля Total Length).<br>
4.&nbsp;Next Header -- селектор следующего заголовка (в том числе, аналог поля Protocol).<br>
5.&nbsp;Hop Limit -- ограничитель числа «прыжков» (аналог поля Time to Live).</p>

<p>Полноценная реализация IPv6 должна поддерживать следующие заголовки:<br>
1.&nbsp;IPv6 header -- собственно IPv6-заголовок.<br>
2.&nbsp;Hop-by-Hop Options header -- заголовок опций ретрансляции.<br>
3.&nbsp;Destination Options header -- заголовок предназначенных станции назначения опций.<br>
4.&nbsp;Routing header -- маршрутизационный заголовок.<br>
5.&nbsp;Fragment header -- заголовок фрагмента.<br>
6.&nbsp;Authentication header -- заголовок протокола AH (связано с защитой информации).<br>
7.&nbsp;Encapsulating Security Payload header -- заголовок протокола ESP (связано с защитой информации).<br>
+8.&nbsp;Upper-layer header -- заголовок протокола вышестоящего уровня.</p>

<p>Подробно IPv4- и IPv6-адресация будет рассмотрена в дальнейшем.</p>

<p>Группа протоколов под названием ARPs (Address Resolution Protocols) предназначена для восстановления соответствий между MAC-адресами и IP-адресами.</p>

<p>Под прямым преобразованием, собственно ARP (RFC&nbsp;826), понимают нахождение MAC-адреса по IP-адресу.</p>

<p>Обратное преобразование выполняется по протоколу RARP (Reverse ARP).</p>

<p>Существует еще InARP (Inverse ARP) и некоторые другие расширения, которые, как и практическое применение ARP, будут рассмотрены в дальнейшем.</p>

<div align="center">
<img src="lk08.05.bmp">
<br>
Рисунок -- Формат пакета ARP
</div>

<p>Поля:<br>
1.&nbsp;Hrd (Hardware) -- тип оборудования (1 -- Ethernet).<br>
2.&nbsp;Pro (Protocol) -- протокол (800h -- IP).<br>
3.&nbsp;HLn (Hardware address Length) -- длина аппаратного (физического) адреса (в байтах, 6 -- Ethernet).<br>
4.&nbsp;PLn (Protocol address Length) -- длина протокольного (логического) адреса (в байтах, 4 -- IP).<br>
5.&nbsp;Op (Opcode) -- код операции: 1 -- Request -- запрос, 2 -- Reply -- ответ (и некоторые другие).<br>
6.&nbsp;SHA (Sender Hardware Address) -- аппаратный адрес станции-отправителя (запрашивающей либо отвечающей на запрос).<br>
7.&nbsp;SPA (Sender Protocol Address) -- протокольный адрес станции-отправителя.<br>
8.&nbsp;THA (Target Hardware Address) -- аппаратный адрес станции-получателя.<br>
9.&nbsp;TPA (Target Protocol Address) -- протокольный адрес станции-получателя.</p>

<p>Протокол системы DNS (Domain Name System) (два основных RFCs, RFC&nbsp;1034 -- больше теория, RFC&nbsp;1035 -- больше практика) предназначен для восстановления соответствий между IP-адресами и адресами прикладного уровня.</p>

<p>Следует отметить, что под <em>доменом</em> (domain, иногда cloud) в СПД обобщенно понимают совокупность устройств, работающих в рамках некоторых единых правил.</p>

<div align="center">
<img src="lk08.06.bmp">
<br>
Рисунок -- Структура системы DNS
</div>

<p>Система DNS соответствует клиент-серверной модели и включает три основных компонента:<br>
1.&nbsp;Адресное пространство доменных названий (domain name space) и записи о ресурсах -- RRs (Resource Records).<br>
2.&nbsp;Серверы названий (name servers).<br>
3.&nbsp;Программы, отвечающие на запросы клиентов (resolvers).<br>
Каждый из этих компонентов «видит» систему DNS по-своему.</p>

<p>Адресное пространство доменных названий имеет иерархическую древовидную структуру. Каждый узел дерева на некотором уровне иерархии обозначают DNS-меткой (DNS label) длиной от 0 до 63 байтов (должна начинаться с буквы и состоять из комбинации букв любого регистра, цифр и символа <span class="c">-</span>). Метка нулевой длины зарезервирована и является корнем дерева. При присоединении станции к определенному домену ей так же присваивают метку.</p>

<p>Доменное название строится из меток -- в соответствии с путем к корневой метке. Полная длина не может превышать 255 байтов.</p>

<p>Доменное название может относиться как к отдельно взятой станции, так и к некоторой ветви дерева, то есть DNS-домену (DNS domain).</p>

<p>Доменное название может быть как абсолютным (absolute), то есть содержащим всю цепочку меток от станции до корневой метки, так и относительным (relative), то есть содержащим только часть меток.</p>

<p>Внутреннее представление метки: один байт, в котором указана длина метки, за которым следуют собственно байты метки. При интерпретации меток регистр букв не учитывается.</p>

<p>Согласно принятой нотации записи доменных названий метки разделяют точками и корневая метка является крайней справа.</p>

<p>Изначально, когда сеть Internet была сосредоточена на территории США, базовым критерием структуризации доменных названий Internet-сайтов являлось целевое использование. Были зарегистрированы следующие домены первого уровня -- TLDs (Top Level Domains): <span class="c">.arpa</span> (ARPANET), <span class="c">.com</span> (commerce), <span class="c">.edu</span> (education), <span class="c">.gov</span> (government), <span class="c">.int</span> (international), <span class="c">.mil</span> (military), <span class="c">.net</span> (network), и <span class="c">.org</span> (organization).</p>

<p>В дальнейшем, по мере расширения Internet, широкое распространение получили национальные TLDs, например, <span class="c">.BY</span>.</p>

<p>С недавнего времени основной упор сделан на продвижение национальных языков (в качестве альтернативы английскому языку). Зарегистрированы дополнительные национальные TLDs, например, <span class="c">.БЕЛ</span>.</p>

<p>Четыре TLDs зарезервированы для специального использования: <span class="c">.example</span>, <span class="c">.invalid</span>, <span class="c">.localhost</span>, <span class="c">.test</span>.</p>

<p>Серверы названий удерживают БД с записями о ресурсах.</p>

<p>Серверы названий делят на:<br>
1.&nbsp;<em>Авторитетные</em> (authoritative, master) -- являются первоисточниками информации о некоторых частях системы DNS, называемых <em>зонами</em> (zones).<br>
2.&nbsp;<em>Вспомогательные</em> (non-authoritative, slave) -- работающие на основании сведений от авторитетных серверов.<br>
Таким образом, серверы так же образуют иерархию -- вплоть до наличия корневых серверов.</p>

<p>Под прямым преобразованием понимают нахождение IP-адреса по доменному названию. Возможно и обратное преобразование.</p>

<p>Необходимо учитывать, что соответствия названий могут динамически изменяться.</p>

<p>Каждой станции входящей в систему DNS станции (как и каждому домену) соответствует некоторое количество RRs.</p>

<div align="center">
<img src="lk08.07.bmp">
<br>
Рисунок -- Формат DNS RR
</div>

<p>Поля:<br>
1.&nbsp;NAME -- доменное название (к которому относится RR, целевое при поиске).<br>
2.&nbsp;TYPE -- тип.<br>
3.&nbsp;CLASS -- класс (семейство протоколов).<br>
4.&nbsp;TTL (Time To Live) -- «время жизни» (то есть время валидности RR, в секундах).<br>
5.&nbsp;RLENGTH (Resource LENGTH) -- длина данных ресурса.<br>
6.&nbsp;RDATA (Resource DATA) -- данные ресурса (зависят от типа и класса).</p>

<p>Основные типы RRs:<br>
1.&nbsp;A (A host address) -- IP-адрес хоста.<br>
2.&nbsp;NS (Name Server) -- авторитетный сервер названий домена.<br>
5.&nbsp;CNAME (Canonical NAME) -- каноническое доменное название (станции либо домена, для псевдонима).<br>
6.&nbsp;SOA (Start Of a zone of Authority) -- оригинальные параметры зоны (сервер с изначальным описанием зоны, контактное лицо, время валидности и другие).<br>
10.&nbsp;NULL -- нулевая запись (произвольная информация).<br>
12.&nbsp;PTR (PoinTeR) -- указатель -- доменное название станции (при обратных преобразованиях).<br>
13.&nbsp;HINFO (Host INFO) -- информация о станции (процессор и ОС).<br>
15.&nbsp;MX (Mail eXchange) -- доменное название почтового сервера в домене (включая приоритет, этот тип используется и вместо нескольких отмененных типов).<br>
16.&nbsp;TXT (TeXT strings) -- текстовые строки (либо строка).<br>
28.&nbsp;AAAA (--) -- IPv6-адрес хоста (RFC&nbsp;3596).<br>
33.&nbsp;SRV (SeRVer selection) -- описание сервиса (любого дополнительного сетевого сервиса на станции, например, файлового) (RFC&nbsp;2782).<br>
И некоторые другие.</p>

<p>Классы RRs:<br>
1.&nbsp;IN -- Internet.<br>
2.&nbsp;CS -- CSNET (устарел и аннулирован).<br>
3.&nbsp;CH -- Chaosnet (устарел).<br>
4.&nbsp;HS -- Hesiod (для БД, очень редкий).<br>
Остальные значения классов зарезервированы.</p>

<p>Примеры значений RRs класса IN:<br>
A: <span class="c">192.168.11.1.</span><br>
CNAME: <span class="c">5-508-fileserv.bsuir.by.</span><br>
MX: <span class="c">10 mail.bsuir.by.</span><br>
NS: <span class="c">proxy1.bsuir.by.</span><br>
PTR: <span class="c">5-508-fileserv.bsuir.by.</span></p>

<div align="center">
<img src="lk08.08.bmp">
<br>
Рисунок -- Формат сообщения DNS
</div>

<p>Поля:<br>
1.&nbsp;Header -- заголовок.<br>
2.&nbsp;Question -- вопрос.<br>
3.&nbsp;Answer -- ответ.<br>
4.&nbsp;Authority -- авторитетный ответ.<br>
5.&nbsp;Additional -- дополнение.<br>
Заголовок присутствует всегда, остальные поля вариативны.</p>

<div align="center">
<img src="lk08.09.bmp">
<br>
Рисунок -- Формат заголовка сообщения DNS
</div>

<p>Поля:<br>
1.&nbsp;ID (IDentifier) -- идентификатор (программы, сгенерировавшей запрос).<br>
2.&nbsp;QR (Query/Responce) -- флаг запроса-ответа: 0 -- Query -- запрос, 1 -- Responce -- ответ.<br>
3.&nbsp;OPCODE (OPeration CODE) -- код операции (запроса): 0 -- QUERY (standard QUERY) -- стандартный запрос (о прямом преобразовании), 1 -- IQUERY (Inverse QUERY) -- запрос об обратном преобразовании (RFC&nbsp;3425 отменен, альтернатива -- использование PTR RR), 2 -- STATUS (server STATUS request) -- запрос состояния сервера, 4 -- NOTIFY -- уведомление (об изменениях в БД о зоне) (RFC&nbsp;1996), 5 -- UPDATE -- обновление (динамическое обновление БД о зоне) (RFC&nbsp;2136), 6 -- DSO (DNS Stateful Operations) -- стабильные DNS-операции (альтернативный унифицированный синтаксис) (RFC&nbsp;8490), остальные значения зарезервированы.<br>
4.&nbsp;AA (Authoritative Answer) -- флаг авторитетного ответа.<br>
5.&nbsp;TC (TrunCation) -- флаг «усеченности» сообщения (при слишком длинном сообщении).<br>
6.&nbsp;RD (Recursion Desired) -- флаг желательной рекурсии (при обработке запроса).<br>
7.&nbsp;RA (Recursion Available) -- флаг поддержки рекурсии.<br>
8.&nbsp;Z (Zero) -- нулевой бит (зарезервировано)<br>
9.&nbsp;AD (Authenticated Data) -- флаг криптографической верифицированности ответа (RFC&nbsp;4035).<br>
10.&nbsp;CD (Checking Disabled) -- флаг отсутствия необходимости в криптографической верификации ответа (при запросе) (RFC&nbsp;4035).<br>
11.&nbsp;RCODE (Response CODE) -- код ответа: 0 -- NoError (No Error) -- ошибок нет, 1 -- FormErr (Format Error) -- ошибка в формате, 2 -- ServFail (Server Failure) -- сбой сервера, 3 -- NXDomain (Non-eXistent Domain Name) -- доменное название не существует, 4 -- NotImp (Not Implemented) -- запрос не поддерживается, 5 -- Refused (Query Refused) -- запрос отклонен, остальные значения относятся к расширениям DNS (RFC&nbsp;2136, RFC&nbsp;2845, RFC&nbsp;2930, RFC&nbsp;4635, RFC&nbsp;6672, RFC&nbsp;6891, RFC&nbsp;7873, RFC&nbsp;8490) и зарезервированы.<br>
12.&nbsp;QDCOUNT (Query D COUNT) -- количество элементов (RRs) в поле Question (обычно один).<br>
13.&nbsp;ANCOUNT (ANswer COUNT) -- количество элементов (RRs) в поле Answer.<br>
14.&nbsp;NSCOUNT (Name Server COUNT) -- количество элементов (RRs) в поле Authority.<br>
15.&nbsp;ARCOUNT (Additional Records COUNT) -- количество элементов (RRs) в поле Additional.</p>

<div align="center">
<img src="lk08.10.bmp">
<br>
Рисунок -- Формат элемента поля Question
</div>

<p>Поля:<br>
1.&nbsp;QNAME (Query NAME) -- доменное название в запросе.<br>
2.&nbsp;QTYPE -- (Query TYPE) -- тип запроса.<br>
3.&nbsp;QCLASS (Query CLASS) -- класс запроса.</p>

<p>Множество значений QTYPE является расширением множества значений TYPE. Основные из новых типов:<br>
251.&nbsp;IXFR (Incremental zone i.e. X transFeR) -- запрос текущих изменений в БД о зоне (от вспомогательного сервера авторитетному, по одноименному протоколу) (RFC&nbsp;1995).<br>
252.&nbsp;AXFR (Authoritative zone i.e. X transFeR) -- запрос полной БД о зоне (по одноименному протоколу) (+RFC&nbsp;5936).<br>
255.&nbsp;* -- запрос всех RRs.</p>

<p>Множество значений QCLASS является расширением множества значений CLASS. Новый класс:<br>
255.&nbsp;* -- любой класс.</p>

<p>Практическое применение DNS будет рассмотрено в дальнейшем.</p>

</div>

</BODY>
</HTML>
